<!--
	//*********************************************************
	//
	// Copyright (c) Microsoft. All rights reserved.
	// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
	// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
	// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
	// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
	//
	//*********************************************************
-->
<Page
	x:Class="WinUIGallery.ControlPages.RevealFocusPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="using:WinUIGallery"
	xmlns:local2="using:WinUIGallery.ControlPages"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d">

	<StackPanel XYFocusKeyboardNavigation="Enabled">
		<StackPanel.Resources>
			<SolidColorBrush x:Key="SystemControlRevealFocusVisualBrush" Color="{ThemeResource SystemAccentColorLight1}" />

			<Style
				x:Key="ButtonRevealCustomStyle"
				BasedOn="{StaticResource ButtonRevealStyle}"
				TargetType="Button">
				<Setter Target="Width" Value="100" />
				<Setter Target="Height" Value="100" />
				<Setter Target="VerticalAlignment" Value="Center" />
				<Setter Target="Margin" Value="10" />
			</Style>

			<Flyout x:Key="myPrimaryColorPickerFlyout">
				<RelativePanel>
					<ColorPicker
						x:Name="myPrimaryColorPicker"
						IsColorChannelTextInputVisible="False"
						IsHexInputVisible="False" />

					<Grid
						RelativePanel.AlignLeftWithPanel="True"
						RelativePanel.AlignRightWithPanel="True"
						RelativePanel.Below="myPrimaryColorPicker">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Button
							Margin="0,12,2,0"
							HorizontalAlignment="Stretch"
							Click="confirmColor_Click"
							Content="Close" />
					</Grid>
				</RelativePanel>
			</Flyout>

			<Flyout x:Key="mySecondaryColorPickerFlyout">
				<RelativePanel>
					<ColorPicker
						x:Name="mySecondaryColorPicker"
						IsColorChannelTextInputVisible="False"
						IsHexInputVisible="False"
						Color="{StaticResource SystemBaseHighColor}" />

					<Grid
						RelativePanel.AlignLeftWithPanel="True"
						RelativePanel.AlignRightWithPanel="True"
						RelativePanel.Below="mySecondaryColorPicker">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Button
							Margin="0,12,2,0"
							HorizontalAlignment="Stretch"
							Click="confirmColor_Click"
							Content="Close" />
					</Grid>
				</RelativePanel>
			</Flyout>
		</StackPanel.Resources>

		<TextBlock Margin="0,16,0,0">
			Use the TAB key on your keyboard in the page below to see the focus visuals.
		</TextBlock>

		<local:ControlExample x:Name="Example1" HeaderText="Change the appearance of the focus rectangle.">

			<StackPanel Orientation="Horizontal">
				<Button AutomationProperties.Name="Square 1" Style="{StaticResource ButtonRevealCustomStyle}" />
				<Button AutomationProperties.Name="Square 2" Style="{StaticResource ButtonRevealCustomStyle}" />
				<Button AutomationProperties.Name="Square 3" Style="{StaticResource ButtonRevealCustomStyle}" />
			</StackPanel>

			<local:ControlExample.Options>
				<RadioButtons Header="FocusVisualKind:">
					<RadioButton
						x:Name="HighVisibility"
						Checked="HighVisibility_Checked"
						Content="High Visibility" />
					<RadioButton
						x:Name="RevealFocus"
						Checked="RevealFocus_Checked"
						Content="Reveal Focus" />
				</RadioButtons>
			</local:ControlExample.Options>
			<local:ControlExample.Xaml>
				<x:String>
					&lt;Application FocusVisualKind="$(FocusVisualKind)"/&gt;
				</x:String>
			</local:ControlExample.Xaml>
			<local:ControlExample.Substitutions>
				<local:ControlExampleSubstitution
					Key="FocusVisualKind"
					x:Name="FocusVisualKindSubstitution"
					IsEnabled="True"
					Value="HighVisibility" />
			</local:ControlExample.Substitutions>
		</local:ControlExample>

		<TextBlock Margin="0,16,0,0" TextWrapping="WrapWholeWords">
			<Bold>NOTE:</Bold>
			Choosing the<Bold>Reveal Focus</Bold>
			radio button will change the focus visuals that "UseSystemFocusVisuals" in the entire WinUI Gallery app.
			Reveal focus should be used on Xbox only. Apps should use high visibility focus rectangles across all other form factors.</TextBlock>

		<local:ControlExample
			x:Name="Example2"
			ActualThemeChanged="Example2_ActualThemeChanged"
			HeaderText="Change the size of the focus rectangle.">

			<StackPanel>
				<StackPanel Orientation="Horizontal">
					<Button
						x:Name="exampleButton"
						AutomationProperties.Name="Square 4"
						FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
						FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
						FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
						FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
						FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
						Style="{StaticResource ButtonRevealCustomStyle}" />
					<Button
						AutomationProperties.Name="Square 5"
						FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
						FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
						FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
						FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
						FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
						Style="{StaticResource ButtonRevealCustomStyle}" />
					<Button
						AutomationProperties.Name="Square 6"
						FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
						FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
						FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
						FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
						FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
						Style="{StaticResource ButtonRevealCustomStyle}" />
				</StackPanel>

				<TextBox
					MinWidth="300"
					Margin="0,16,0,0"
					AutomationProperties.Name="Sample textBox"
					FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
					FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
					FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
					FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
					FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}" />

				<ComboBox
					MinWidth="300"
					Margin="0,16,0,0"
					AutomationProperties.Name="Sample"
					FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
					FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
					FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
					FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
					FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
					SelectedIndex="0">
					<ComboBoxItem>Apples</ComboBoxItem>
					<ComboBoxItem>Bananas</ComboBoxItem>
					<ComboBoxItem>Oranges</ComboBoxItem>
					<ComboBoxItem>Strawberries</ComboBoxItem>
				</ComboBox>

				<RatingControl
					Margin="5,16,0,0"
					AutomationProperties.Name="sample ratingControl"
					FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
					FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
					FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
					FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
					FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}" />

				<Slider
					MinWidth="300"
					Margin="5,16,0,0"
					AutomationProperties.Name="Sample"
					FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
					FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
					FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
					FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
					FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
					IsFocusEngagementEnabled="True" />

				<TimePicker
					MinWidth="300"
					Margin="5,16,0,0"
					AutomationProperties.Name="Sample TimePicker" />

			</StackPanel>

			<local:ControlExample.Options>
				<StackPanel>
					<Slider
						x:Name="primarySlider"
						MinWidth="50"
						Header="Primary Thickness"
						Maximum="10"
						Minimum="0"
						Value="2" />
					<Slider
						x:Name="secondarySlider"
						MinWidth="50"
						Header="Secondary Thickness"
						Maximum="10"
						Minimum="0"
						Value="1" />
					<Slider
						x:Name="marginSlider"
						MinWidth="50"
						Header="Margin"
						Maximum="20"
						Minimum="-20"
						Value="-3" />
					<Button
						Margin="0,10"
						Click="Button_Click"
						Content="Reset margin" />
					<Button
						Margin="0,24"
						Click="MoveFocusBtn_Click"
						Content="Move keyboard focus" />

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<TextBlock VerticalAlignment="Center" Text="Primary focus color:" />
						<Button
							x:Name="primaryColorPickerButton"
							Grid.Column="1"
							Width="40"
							Height="40"
							Margin="10"
							HorizontalAlignment="Right"
							AutomationProperties.Name="{x:Bind myPrimaryColorPicker.Color}"
							Background="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
							Flyout="{StaticResource myPrimaryColorPickerFlyout}" />

						<TextBlock
							Grid.Row="1"
							VerticalAlignment="Center"
							Text="Secondary focus color:" />
						<Button
							x:Name="secondaryColorPickerButton"
							Grid.Row="1"
							Grid.Column="1"
							Width="40"
							Height="40"
							Margin="10"
							HorizontalAlignment="Right"
							AutomationProperties.Name="{x:Bind myPrimaryColorPicker.Color}"
							Background="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
							Flyout="{StaticResource mySecondaryColorPickerFlyout}" />
					</Grid>
				</StackPanel>

			</local:ControlExample.Options>
			<local:ControlExample.Xaml>
				<x:String xml:space="preserve">
&lt;Grid.Resources&gt;
          &lt;SolidColorBrush x:Key="$(PrimaryColorKey)" Color="$(PrimaryColor)" /&gt;
          &lt;SolidColorBrush x:Key="SystemControlFocusVisualSecondaryBrush" Color="$(SecondaryColor)" /&gt;
&lt;/Grid.Resources&gt;
&lt;Button Width="100" Height="100"
          FocusVisualPrimaryThickness="$(PrimaryThickness)"
          FocusVisualSecondaryThickness="$(SecondaryThickness)"
          FocusVisualMargin="$(Margin)"
          FocusVisualPrimaryBrush="$(PrimaryBrush)"
          FocusVisualSecondaryBrush="{StaticResource SystemControlFocusVisualSecondaryBrush}" /&gt;
                </x:String>
			</local:ControlExample.Xaml>
			<local:ControlExample.Substitutions>
				<local:ControlExampleSubstitution Key="PrimaryColorKey" x:Name="primaryColorKeyText" />
				<local:ControlExampleSubstitution Key="PrimaryColor" Value="{x:Bind myPrimaryColorPicker.Color, Mode=OneWay}" />
				<local:ControlExampleSubstitution Key="SecondaryColor" Value="{x:Bind mySecondaryColorPicker.Color, Mode=OneWay}" />
				<local:ControlExampleSubstitution Key="PrimaryThickness" Value="{x:Bind primarySlider.Value, Mode=OneWay}" />
				<local:ControlExampleSubstitution Key="SecondaryThickness" Value="{x:Bind secondarySlider.Value, Mode=OneWay}" />
				<local:ControlExampleSubstitution Key="Margin" Value="{x:Bind marginSlider.Value, Mode=OneWay}" />
				<local:ControlExampleSubstitution Key="PrimaryBrush" x:Name="primaryBrushText" />
			</local:ControlExample.Substitutions>
		</local:ControlExample>
		<TextBlock Margin="0,16,0,0">
			<Run>Notes:</Run>
			The reveal glow will scale proportionally to the size of the<Bold>FocusVisualPrimaryThickness</Bold>
			.</TextBlock>
	</StackPanel>
</Page>
